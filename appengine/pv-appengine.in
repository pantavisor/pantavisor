#!/bin/bash

set -e

interactive='false'

usage() {
	echo "Usage: $0 [options]"
	echo "Run Pantavisor in an existing OS"
	echo "options:"
	echo "       -h         show help"
	echo "       -i         wait for user confirmation between reboots"
	echo "       -c CMDLINE additional cmdline arguments (incl. legacy configs)"
	echo "       -e ENVS envs to set (incl. new config format)"
}

exec_run() {
	# get installation path
	scriptpath=`readlink -f "$0"`

	# check installed
	if [ ! -f "@CMAKE_INSTALL_FULL_SYSCONFDIR@/pantavisor-appengine.config" ]; then
		echo "ERROR: installation path '@CMAKE_INSTALL_FULL_SYSCONFDIR@/pantavisor-appengine.config' not found"
		exit 1
	fi

	if [ -d @PV_INSTALL_FULL_STORAGEDIR@-ovl ]; then
		mkdir -p @PV_INSTALL_FULL_STORAGEDIR@-ovl/upper
		mkdir -p @PV_INSTALL_FULL_STORAGEDIR@-ovl/work
		if ! mount -t overlay overlay -o lowerdir=@PV_INSTALL_FULL_STORAGEDIR@,upperdir=@PV_INSTALL_FULL_STORAGEDIR@-ovl/upper,workdir=@PV_INSTALL_FULL_STORAGEDIR@-ovl/work @PV_INSTALL_FULL_STORAGEDIR@; then
			echo "Could not mount /storage; /storage might still be mounted from previous run on another pantavisor is running."
			echo "To Fix: check and maybe umount /storage /var/pantavisor/storage; then try again."
			exit 1
		fi
	fi

	pv_trying=""
	while true
	do
		# load boot info
		revs=`cat "@PV_INSTALL_FULL_STORAGEDIR@/boot/uboot.txt"`
		pv_rev=`echo "$revs" | awk -v FS="(pv_rev=|pv_try=)" '{print $2}'`
		pv_try=`echo "$revs" | awk -v FS="(pv_rev=|pv_try=)" '{print $3}'`

		# set boot info
		if [ -n "$pv_try" ]; then
			if [ -n "$pv_trying" ] && [ "$pv_trying" = "$pv_try" ]; then
				pv_trying=""
			else
				pv_trying="$pv_try"
				pv_rev="$pv_try";
			fi
		fi

		# load cmdline file
		cmdline_file=`cat "@PV_INSTALL_FULL_STORAGEDIR@/boot/cmdline.txt"`

		# exec Pantavisor
		set +e
		eval $envs /usr/bin/unshare --cgroup @CMAKE_INSTALL_FULL_BINDIR@/pantavisor-run --config @CMAKE_INSTALL_FULL_SYSCONFDIR@/pantavisor-appengine.config --cmdline "pv_rev=$pv_rev pv_try=$pv_try $cmdline_file $cmdline"
		set -e

		# lets cosume all buffered input first
		while read -d "" -t 0.01; do
			:
		done

		# wait for user input or continue
		if [ "$interactive" = 'true' ]
		then
			read -p "Reseting Pantavisor. Press ENTER to continue or CTRL-C to exit safely..." INPUT
		fi

		if read -t 3 -p "Will restart Pantavisor in 3 sec: Press ENTER to abort"; then
			echo "Exiting ..."
			break
		fi
	done

if [ -d @PV_INSTALL_FULL_STORAGEDIR@-ovl ]; then
	umount /var/pantavisor/storage
fi


}

# parse options
while [ $# -gt 0 ]; do
	case "$1" in
		-h)
			usage; exit 0
			;;
		-i)
			interactive='true'
			;;
		-c)
			shift
			cmdline="$1"
			if [ -z "$cmdline" ]; then echo "ERROR: Empty cmdline"; usage; exit 1; fi
			;;
		-e)
			shift
			envs="$1"
			;;
		*)
			break
	esac
	shift
done

if ! [ -f @PV_INSTALL_FULL_STORAGEDIR@/trails/0/.pvr/json ]; then
	mkdir -p @PV_INSTALL_FULL_STORAGEDIR@/trails/0/.pvr
	echo -n '{"#spec":"pantavisor-service-system@1"}' > @PV_INSTALL_FULL_STORAGEDIR@/trails/0/.pvr/json
fi

if ! [ -f @PV_INSTALL_FULL_STORAGEDIR@/boot/uboot.txt ]; then
	mkdir -p @PV_INSTALL_FULL_STORAGEDIR@/boot
	echo -e -n 'pv_rev=0\0\0' > @PV_INSTALL_FULL_STORAGEDIR@/boot/uboot.txt
fi

# uninstall Pantavisor
exec_run

